# -*- coding: utf-8 -*-
"""Company_Stat.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wnLrHL4QoqPZqw0CcsvLDCN1DiKh9ECL
"""

class statistic():
  
  def __init__(self,file_name):

    from collections import Counter

    company = parsing_json_(file_name)
    com = company.df
    com['Substep_source'] = 0
    com_sub = com[['Substep','Detection_Type', 'Substep_source']]
    com_sub['source'] = clists_creator()

    # strip 出column from list
    list1 = []
    list2 = []
    for i in com_sub['Detection_Type']:
      
      if len(i) ==2:
        list1.append(i[0])
        list2.append(i[1])
      else:
        list1.append(i[0])
        list2.append('')
    com_sub['Detection_Type_1'] = list1
    com_sub['Detection_Type_2'] = list2

    total_list = list(com_sub['Detection_Type_1']) + list(com_sub['Detection_Type_2'])

    

    print(file_name)
    print(Counter(total_list))
    print('')
    print('')
    print('')
    
    ### plot detection type
    import matplotlib.pyplot as plt
    import seaborn as sns


    labels = []
    sizes = []
    for x, y in dict(Counter(total_list)).items():
      labels.append(x)
      sizes.append(y)

    plt.figure()
    plt.pie(sizes,radius=3,autopct='%0.2f%%',labels= labels,
          startangle=90)
    plt.title('Detection_Type',fontdict={'size':20,'weight':'bold'})
    plt.plot()


    #analytic detections
    com_analytic = com_sub[(com_sub['Detection_Type_1'] == 'Technique') | (com_sub['Detection_Type_1'] == 'Tactic') | (com_sub['Detection_Type_1'] == 'General')|(com_sub['Detection_Type_2'] == 'Technique') | (com_sub['Detection_Type_2'] == 'Tactic') | (com_sub['Detection_Type_2'] == 'General')]
    print('Analytic source ')
    print(com_analytic['source'].value_counts())
    print('')
    print('')
    print('')
    




    #Detection 比較 圓餅
    #check

    #analytic Coverage
    #check


    #Telemetry
    #check
    counter_dic = dict(Counter(total_list))
    Telemetry_count = counter_dic['Telemetry']
    analytic_count = counter_dic['Technique'] +counter_dic['General'] 

    if 'Tactic' in counter_dic:
      analytic_count += counter_dic['Tactic']
    
    print('Telemetry vs Analytic')
    print('Telemetry_count:',Telemetry_count)
    print('analytic_count:',analytic_count)
    print('')
    print('')
    print('')

    #visibility
    #check

    com_viz = com_sub[(com_sub['Detection_Type_1'] == 'Technique') | (com_sub['Detection_Type_1'] == 'Tactic') | (com_sub['Detection_Type_1'] == 'General')|(com_sub['Detection_Type_2'] == 'Technique') | (com_sub['Detection_Type_2'] == 'Tactic') | (com_sub['Detection_Type_2'] == 'General') | (com_sub['Detection_Type_1'] == 'Telemetry') | (com_sub['Detection_Type_1'] == 'Telemetry')]
    print('visibility 分析:::')
    print(com_viz['source'].value_counts())
    print('')
    print('')
    print('')

    #technique comparison
    com_tech = com_sub[(com_sub['Detection_Type_1'] == 'Technique') | (com_sub['Detection_Type_2'] == 'Technique')]
    
    print('technique 總數為:::')
    print(com_tech['source'].value_counts())
    print('')
    print('')
    print('')



    print('---------------------------------------------------------------------------------------')
    print('---------------------------------------------------------------------------------------')